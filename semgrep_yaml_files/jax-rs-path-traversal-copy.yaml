rules:
  - id: jax-rs-path-traversal-copy
    metadata:
      owasp:
        - A05:2017 - Broken Access Control
        - A01:2021 - Broken Access Control
      cwe:
        - "CWE-22: Improper Limitation of a Pathname to a Restricted Directory
          ('Path Traversal')"
      source-rule-url: https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN
      references:
        - https://www.owasp.org/index.php/Path_Traversal
      category: security
      technology:
        - jax-rs
      cwe2022-top25: true
      cwe2021-top25: true
      subcategory:
        - vuln
      likelihood: LOW
      impact: LOW
      confidence: MEDIUM
      license: Commons Clause License Condition v1.0[LGPL-2.1-only]
      vulnerability_class:
        - Path Traversal
    message: Detected a potential path traversal. A malicious actor could control
      the location of this file, to include going backwards in the directory
      with '../'. To address this, ensure that user-controlled variables in file
      paths are sanitized. You may also consider using a utility method such as
      org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file
      name from the path.
    severity: WARNING
    languages:
      - java
    pattern-either:
      - pattern: |
          $RETURNTYPE $FUNC (...,$ZIP,...) {
            ...
            String $VAR = $ZIP.getName();
            ...
            String[] $DIRS = $VAR.split(...);
            ...
            new File(...,$DIRS[...],...);
            ...
          }
      - pattern: |
          $RETURNTYPE $FUNC (...,$HTTPHEADER,...) {
            ...
            String $VAR = $HTTPHEADER.getHeaderString(...);
            ...
            new File(...,$VAR,...);
            ...
          }
      - pattern: |
          $RETURNTYPE $FUNC (...,$HTTPHEADER,...) {
            ...
            String $VAR = $HTTPHEADER.getHeaderString(...);
            ...
            new URL(...,$VAR,...);
            ...
          }
      - pattern: |
          $RETURNTYPE $FUNC (..., @PathParam(...) $TYPE $VAR, ...) {
            ...
            new File(..., $VAR, ...);
            ...
          }
      - pattern: |
          $RETURNTYPE $FUNC (..., File $VAR, ...) {
            ...
            File $FILE = $CLASS.$METHOD(...);
            ...
          }
      - pattern: |
          $FUNC (...) {
            ...
            String $VAR = $METHOD(...);
            ...
            new File($VAR, ...);
            ...
          }
      - pattern: |-
          $RETURNTYPE $FUNC (..., @javax.ws.rs.PathParam(...) $TYPE $VAR, ...) {
            ...
            new File(..., $VAR, ...);
            ...
          }
      - pattern: |-
          $RETURNTYPE $FUNC (..., File $VAR, ...) {
            ...
            new File(..., $VAR, ...);
            ...
          }
      - pattern: |-
          $RETURNTYPE $FUNC(..., String $VARI, ...) {
            ...
            for(...) {
              ...
              $FILE = new File(..., $VAR,...);
              ...
            }
            ...
          }
      - pattern: |-
          $RETURNTYPE $FUNC(..., String $VAR, ...) {
            ...
            $FILE = new File(..., $VAR,...);
            ...
          }
      - pattern: |-
          $RETURNTYPE $FUNC(..., $ZIP, ...) {
            ...
            $VAR = $METHOD(...,$ZIP.getName(),...);
            ...
            $FILE = new File(..., $VAR,...);
            ...
          }
      - pattern: |-
          $RETURNTYPE $FUNC(..., Path $PATH, ...) {
            ...
            $FILE = $PATH.resolve(...);
            ...
            
          }
