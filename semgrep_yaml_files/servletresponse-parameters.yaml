rules:
  - id: servletresponse-parameters
    message: "Potential cross-site scripting, SQL Injection, path traversal, or
      command injection detected in HttpServletResponse writer with variable
      '$VAR'. User input was detected going directly from the HttpServletRequest
      into output. Ensure your data is properly encoded using
      org.owasp.encoder.Encode.forHtml: 'Encode.forHtml($VAR)'."
    metadata:
      cwe:
        - "CWE-79: Improper Neutralization of Input During Web Page Generation
          ('Cross-site Scripting')"
        - "CWE-89: Improper Neutralization of Special Elements used in an SQL
          Command ('SQL Injection')"
        - "CWE-22: Improper Limitation of a Pathname to a Restricted Directory
          ('Path Traversal')"
        - "CWE-77: Improper Neutralization of Special Elements used in a Command
          ('Command Injection')"
      owasp:
        - A07:2017 - Cross-Site Scripting (XSS)
        - A03:2021 - Injection
      source-rule-url: https://find-sec-bugs.github.io/bugs.htm#XSS_SERVLET
      category: security
      technology:
        - java
      references:
        - https://owasp.org/Top10/A03_2021-Injection
      cwe2022-top25: true
      cwe2021-top25: true
      subcategory:
        - vuln
      likelihood: MEDIUM
      impact: MEDIUM
      confidence: MEDIUM
      license: Commons Clause License Condition v1.0[LGPL-2.1-only]
      vulnerability_class:
        - Cross-Site-Scripting (XSS)
    severity: ERROR
    patterns:
      - pattern-inside: $TYPE $FUNC(..., HttpServletResponse $RESP, ...) { ... }
      - pattern-inside: $VAR = $REQ.getParameter(...); ...
      - pattern-either:
          - pattern: $RESP.getWriter(...).write(..., $VAR, ...);
          - pattern: |
              $WRITER = $RESP.getWriter(...);
              ...
              $WRITER.write(..., $VAR, ...);
          - pattern: |
              return $VAR;
          - pattern: |
              $METHOD(..., $VAR, ...);
    languages:
      - java
